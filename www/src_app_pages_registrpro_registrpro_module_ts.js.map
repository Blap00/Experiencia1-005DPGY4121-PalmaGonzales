{"version":3,"file":"src_app_pages_registrpro_registrpro_module_ts.js","mappings":"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","sources":["./src/app/pages/registrpro/registrpro-routing.module.ts","./src/app/pages/registrpro/registrpro.module.ts","./src/app/pages/registrpro/registrpro.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegistrproPage } from './registrpro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistrproPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistrproPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistrproPageRoutingModule } from './registrpro-routing.module';\r\n\r\nimport { RegistrproPage } from './registrpro.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegistrproPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [RegistrproPage]\r\n})\r\nexport class RegistrproPageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core'; \r\nimport { UsuarioAluService, Datos } from 'src/app/services/usuario-alu.service';\r\nimport { Platform, ToastController, IonList } from '@ionic/angular';\r\n// import { JsonUsers } from '../../models/json-users';\r\n// import { ApiAlmJsonService } from '../../services/api-alm-json.service';\r\n// import { ApiAlmJson } from 'src/app/interface/interfaceAlu';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport {AlertController} from '@ionic/angular';\r\n\r\n\r\ninterface Carrera{\r\n  name: string;\r\n  value: number;\r\n}\r\ninterface Semestre{\r\n  sem: string;\r\n  value: number;\r\n}\r\ninterface datousu{\r\n  id: number;\r\n  usuario: String,\r\n  contrasenna: String,\r\n  recontrasenna: String,    \r\n  carrera: String,\r\n  semestre: String,\r\n  modified: number\r\n}\r\n@Component({\r\n  selector: 'app-registrpro',\r\n  templateUrl: './registrpro.page.html',\r\n  styleUrls: ['./registrpro.page.scss'],\r\n})\r\nexport class RegistrproPage implements OnInit {  \r\n  datos: Datos[]= [];\r\n  formularioRegistro:FormGroup;\r\n  newUsuario: Datos = <Datos>{};\r\n  // usuarios:ApiAlmJson[]=[];\r\n  newDato: Datos= <Datos>{};\r\n  @ViewChild('myList')myList : IonList\r\n  data: Datos= <Datos>{};\r\n  // usuario:datousu\r\n  usuarionue={\r\n    id: 0,\r\n    usuario:'',\r\n    contrasenna:'', \r\n    recontrasenna:'',   \r\n    carrera:'',\r\n    semestre:'',\r\n    modified: 0,\r\n}\r\n  constructor(\r\n    private usuarioservice:UsuarioAluService,\r\n    // private apiService:ApiAlmJsonService,\r\n    private router:Router,\r\n    private storageService: UsuarioAluService,\r\n    private plt: Platform, private toastController: ToastController,\r\n    private alertController : AlertController,\r\n    private fb: FormBuilder  \r\n    \r\n    ) {\r\n      this.formularioRegistro = this.fb.group({\r\n        'id': this.data.id,\r\n        'usuario': new FormControl(\"\", Validators.required),\r\n        'contrasenna': new FormControl(\"\", Validators.required),\r\n        'recontrasenna': new FormControl(\"\", Validators.required),\r\n        'carrera': new FormControl(\"\",Validators.required),\r\n        'semestre': this.data.semestre,\r\n        'modified': this.data.modified,\r\n      }\r\n    )\r\n      this.plt.ready().then(()=>{\r\n        this.loadDatos();   \r\n      })\r\n      \r\n     }\r\n//get\r\nloadDatos(){\r\n  this.storageService.getDatos().then(dato=>{\r\n      this.datos=dato;\r\n  })\r\n}\r\n  //Create\r\n  submitForm(){\r\n    var form = this.formularioRegistro.value;\r\n    var IsExist= false;\r\n    var IsValidPass= false;\r\n    if(this.formularioRegistro.invalid){\r\n      console.log(\"alerta error invalido\")\r\n    }\r\n    else{\r\n      this.newUsuario.usuario = form.usuario,\r\n      this.newUsuario.id = form.id,\r\n      this.newUsuario.contrasenna = form.contrasenna,\r\n      this.newUsuario.recontrasenna = form.recontrasenna,\r\n      this.newUsuario.modified = form.modified,\r\n      this.newUsuario.carrera = form.carrera,\r\n      this.newUsuario.semestre = form.semestre,\r\n      \r\n      this.usuarioservice.getDatos().then(data=>{\r\n        this.datos=data;\r\n        if(!data || data.length==0){\r\n          this.usuarioservice.addDatos(this.newUsuario).then(dato=>{\r\n            this.newUsuario=<Datos>{};\r\n            this.showToast('¡Usuario creado con exito!')\r\n          });\r\n        }\r\n        else{\r\n          for(let obj of this.datos){\r\n            if(this.newUsuario.usuario==obj.usuario){\r\n              IsExist=true;\r\n            }\r\n            if(this.newUsuario.contrasenna== this.newUsuario.recontrasenna){\r\n              IsValidPass=true;\r\n            }\r\n          }\r\n          if(IsExist){\r\n            console.log(\"ERROR, YA EXISTE, FALSO\")\r\n            this.formularioRegistro.reset();\r\n          }\r\n          else if(IsValidPass==false){\r\n            console.log(\"Reingrese su contrasenna y validacion\")\r\n            this.formularioRegistro.reset();\r\n          }\r\n          else{\r\n            this.usuarioservice.addDatos(this.newUsuario).then(data=>{\r\n              // var carreraTOUP=form.carrera.toUpperCase();\r\n              // if(carreraTOUP==\"INGENIERIA INFORMATICA\"||carreraTOUP==\"INGENIERA MECANICA\"||carreraTOUP==\"INGENIERIA COMERCIAL\"||carreraTOUP==\"INGENIERIA EN COMERCIO EXTERIOR\"||carreraTOUP==\"ingenieria en comercio exterior\"){\r\n                this.router.navigate(['inisespro'])    \r\n                console.log(\"No existe el usuario, se permite registrar\")\r\n              \r\n              // else{\r\n              //   console.log(\"Necesita ingresar Ingenieria Informatica, ingenieria mecanica, Ingenieria comercial, Ingenieria en comercio exterior \")\r\n              // }\r\n              this.newUsuario=<Datos>{};\r\n              this.showToast(\"Se creo usuario\")\r\n            }); \r\n            this.formularioRegistro.reset();\r\n\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n// ALERTAS\r\n\r\nasync alertError1(){\r\n  const alert = await this.alertController.create({ \r\n    header: '¡Error!',\r\n    message: '¡Debe completar todos los datos!',\r\n    buttons: ['Aceptar']\r\n  })\r\n  await alert.present();\r\n}\r\n\r\nasync alertError2(){\r\n  const alert = await this.alertController.create({ \r\n    header: '¡Error!',\r\n    message: 'Debe completar el campo de Usuario correctamente. ¡Este debe tener de 5 a más caracteres!',\r\n    buttons: ['Aceptar']\r\n  })\r\n  await alert.present();\r\n}\r\n\r\nasync alertError3(){\r\n  const alert = await this.alertController.create({ \r\n    header: '¡Error!',\r\n    message: 'Debe completar el campo de CONTRASENNA correctamente. ¡Este debe tener sobre 8 carácteres!',\r\n    buttons: ['Aceptar']\r\n  })\r\n  await alert.present();\r\n}\r\n\r\nasync alertError4(){\r\n  const alert = await this.alertController.create({ \r\n    header: '¡Error!',\r\n    message: 'El campo de validacion Contrasenna no es valido. ¡Reescriba correctamente su PASS!',\r\n    buttons: ['Aceptar']\r\n  })\r\n  await alert.present();\r\n}\r\n\r\nasync alertError5(){\r\n  const alert = await this.alertController.create({ \r\n    header: '¡Error!',\r\n    message: 'Debe ingresar correctamente su campo de carrera ¡Vuelva a intentarlo!',\r\n    buttons: ['Aceptar']\r\n  })\r\n  await alert.present();\r\n}\r\n\r\nasync alertCorreoDuplicado(){\r\n  const alert = await this.alertController.create({ \r\n    header: '¡Error!',\r\n    message: 'El Usuario ingresado ya existe',\r\n    buttons: ['Aceptar']\r\n  })\r\n  await alert.present();\r\n}\r\n\r\n// Fin de ALERTAS\r\n//update\r\nupdateDatos(dato:Datos){\r\n  dato.usuario= `UPDATED: ${dato.usuario}`;\r\n  dato.modified= Date.now();\r\n  this.storageService.updateDatos(dato).then(item=>{\r\n    this.showToast('Usuario Actualizado!')\r\n    this.myList.closeSlidingItems();\r\n    this.loadDatos();\r\n  })\r\n}\r\n//delete\r\ndeleteDatos(dato:Datos){\r\n  this.storageService.deleteDatos(dato.id).then(item=>{\r\n    this.showToast('Usuario Eliminado!');\r\n    this.myList.closeSlidingItems();\r\n    this.loadDatos();\r\n  })\r\n}\r\nasync showToast(msg){\r\n  const toast = await this.toastController.create({\r\n    message: msg,\r\n    duration:2000\r\n  });\r\n  toast.present();\r\n}\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n    \r\n  carrera: Carrera[]=[\r\n    {\r\n      name: 'Ingenieria Informatica',\r\n      value: 1,\r\n    },\r\n    {\r\n      name: 'Analista Programador',\r\n      value: 2,\r\n    },\r\n    {\r\n      name: 'Ingenieria Mecanica',\r\n      value: 3,\r\n    },\r\n    {\r\n      name: 'Auditor contador',\r\n      value: 4,\r\n    },\r\n    \r\n  ];\r\n  semestre: Semestre[]=[\r\n    {\r\n      sem: 'Primer semestre',\r\n      value: 1,\r\n    },\r\n    {\r\n      sem: 'Segundo Semestre',\r\n      value: 2,\r\n    },\r\n    {\r\n      sem: 'Tercer semestre',\r\n      value: 3,\r\n    },\r\n    {\r\n      sem: 'Cuarto Semestre',\r\n      value: 4,\r\n    },\r\n    \r\n  ];\r\n  \r\n}\r\n"],"names":["Component","ViewChild","UsuarioAluService","Platform","ToastController","Router","FormControl","Validators","FormBuilder","AlertController","RegistrproPage","constructor","usuarioservice","router","storageService","plt","toastController","alertController","fb","id","usuario","contrasenna","recontrasenna","carrera","semestre","modified","name","value","sem","formularioRegistro","group","data","required","ready","then","loadDatos","getDatos","dato","datos","submitForm","form","IsExist","IsValidPass","invalid","console","log","newUsuario","length","addDatos","showToast","obj","reset","navigate","alertError1","alert","create","header","message","buttons","present","alertError2","alertError3","alertError4","alertError5","alertCorreoDuplicado","updateDatos","Date","now","item","myList","closeSlidingItems","deleteDatos","msg","toast","duration","ngOnInit","args","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}